CREATE TABLE "User" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "FirstName" nvarchar,
  "LastName" nvarchar,
  "Username" nvarchar UNIQUE NOT NULL,
  "Password" nvarchar,
  "Refresh_Token" nvarchar,
  "Email" nvarchar UNIQUE NOT NULL,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "User_Role_Mapping" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "User_Id" integer NOT NULL,
  "Role_Id" integer NOT NULL,
  "Is_Active" boolean DEFAULT true,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "User_Status" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "User_Id" integer NOT NULL,
  "Status_Type_Id" integer NOT NULL,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Status_Type" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" nvarchar UNIQUE NOT NULL,
  "Description" nvarchar,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Role" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" nvarchar,
  "Description" nvarchar,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Profile" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "User_Id" integer UNIQUE NOT NULL,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Allergy" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" nvarchar UNIQUE NOT NULL,
  "Description" nvarchar,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Profile_Allergy" (
  "Profile_Id" integer NOT NULL,
  "Allergy_Id" integer NOT NULL,
  "Created_At" timestamp DEFAULT (now()),
  PRIMARY KEY ("Profile_Id", "Allergy_Id")
);

CREATE TABLE "Flavor" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" nvarchar UNIQUE NOT NULL,
  "Description" nvarchar,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Profile_Flavor_Preference" (
  "Profile_Id" integer,
  "Flavor_Id" integer,
  "Preference_Level" integer,
  "Created_At" timestamp DEFAULT (now()),
  PRIMARY KEY ("Profile_Id", "Flavor_Id")
);

CREATE TABLE "Dish_History" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Profile_Id" integer NOT NULL,
  "Dish_Name" nvarchar NOT NULL,
  "User_Rating" integer,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Constraints" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Profile_Id" integer NOT NULL,
  "Constrain_Type_Id" integer NOT NULL,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Constrain_Type" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Name" nvarchar,
  "Created_At" timestamp DEFAULT (now())
);

CREATE TABLE "Special_Preference" (
  "Id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "Profile_Id" integer NOT NULL,
  "Description" nvarchar NOT NULL,
  "Created_At" timestamp DEFAULT (now())
);

COMMENT ON COLUMN "User"."Password" IS 'Hashed and salted';

COMMENT ON COLUMN "Role"."Name" IS 'Granular roles';

COMMENT ON COLUMN "Profile_Flavor_Preference"."Preference_Level" IS 'Scale 1-10 representing preference strength';

COMMENT ON COLUMN "Dish_History"."Dish_Name" IS 'if the dish is not from are db';

COMMENT ON COLUMN "Dish_History"."User_Rating" IS 'User rating 1-5';

COMMENT ON COLUMN "Special_Preference"."Description" IS 'Free text detailing the special preference';

ALTER TABLE "User_Role_Mapping" ADD FOREIGN KEY ("User_Id") REFERENCES "User" ("Id");

ALTER TABLE "User_Role_Mapping" ADD FOREIGN KEY ("Role_Id") REFERENCES "Role" ("Id");

ALTER TABLE "User_Status" ADD FOREIGN KEY ("User_Id") REFERENCES "User" ("Id");

ALTER TABLE "User_Status" ADD FOREIGN KEY ("Status_Type_Id") REFERENCES "Status_Type" ("Id");

ALTER TABLE "Profile" ADD FOREIGN KEY ("User_Id") REFERENCES "User" ("Id");

ALTER TABLE "Profile_Allergy" ADD FOREIGN KEY ("Profile_Id") REFERENCES "Profile" ("Id");

ALTER TABLE "Profile_Allergy" ADD FOREIGN KEY ("Allergy_Id") REFERENCES "Allergy" ("Id");

ALTER TABLE "Profile_Flavor_Preference" ADD FOREIGN KEY ("Profile_Id") REFERENCES "Profile" ("Id");

ALTER TABLE "Profile_Flavor_Preference" ADD FOREIGN KEY ("Flavor_Id") REFERENCES "Flavor" ("Id");

ALTER TABLE "Dish_History" ADD FOREIGN KEY ("Profile_Id") REFERENCES "Profile" ("Id");

ALTER TABLE "Constraints" ADD FOREIGN KEY ("Profile_Id") REFERENCES "Profile" ("Id");

ALTER TABLE "Constraints" ADD FOREIGN KEY ("Constrain_Type_Id") REFERENCES "Constrain_Type" ("Id");

ALTER TABLE "Special_Preference" ADD FOREIGN KEY ("Profile_Id") REFERENCES "Profile" ("Id");
